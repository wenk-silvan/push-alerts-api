ó
IC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\Credentials.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

class 
Credentials 
{ 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
string		/ 5
.		5 6
Empty		6 ;
;		; <
}

 
} Ë	
EC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\NewTask.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

class 
NewTask 
{ 
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
=

0 1
string

2 8
.

8 9
Empty

9 >
;

> ?
public 
string 
Source 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Payload 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
} 
} ™
EC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\Project.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

class 
Project 
{		 
[

 	

JsonIgnore

	 
]

 
public

 
int

 
Id

  "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
Guid 
Uuid 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
[ 	

JsonIgnore	 
] 
public 
virtual #
List$ (
<( )
Task) -
>- .
?. /
Tasks0 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
=D E
newF I
(I J
)J K
;K L
[ 	

JsonIgnore	 
] 
public 
virtual #
List$ (
<( )
User) -
>- .
Users/ 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
=C D
newE H
(H I
)I J
;J K
} 
} ß
BC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\Task.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public		 

class		 
Task		 
{

 
[ 	

JsonIgnore	 
] 
public 
int 
Id  "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	

JsonIgnore	 
] 
public 
int 
	ProjectId  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
Guid 
Uuid 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Source 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
? 

AssignedAt #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
? 
ClosedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Payload 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
	NotMapped	 
] 
public 
string !
?! "
	UserEmail# ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
[!! 	

JsonIgnore!!	 
]!! 
public!! 
virtual!! #
User!!$ (
?!!( )
User!!* .
{!!/ 0
get!!1 4
;!!4 5
set!!6 9
;!!9 :
}!!; <
public## 
	TaskState## 
Status## 
{##  !
get##" %
;##% &
set##' *
;##* +
}##, -
public%% 
Task%% 
(%% 
string%% 
title%%  
,%%  !
string%%" (
description%%) 4
,%%4 5
string%%6 <
source%%= C
,%%C D
int%%E H
	projectId%%I R
,%%R S
string%%T Z
?%%Z [
payload%%\ c
)%%c d
{&& 	
Uuid'' 
='' 
Guid'' 
.'' 
NewGuid'' 
(''  
)''  !
;''! "
Title(( 
=(( 
title(( 
;(( 
Description)) 
=)) 
description)) %
;))% &
Source** 
=** 
source** 
;** 
	CreatedAt++ 
=++ 
DateTime++  
.++  !
Now++! $
;++$ %
	ProjectId,, 
=,, 
	projectId,, !
;,,! "
Payload-- 
=-- 
payload-- 
;-- 
Status.. 
=.. 
	TaskState.. 
... 
Opened.. %
;..% &
}// 	
}00 
}11 æ
NC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\TaskNotification.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

class 
TaskNotification !
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
Guid		 
Uuid		 
{		 
get		 
;		 
set		  #
;		# $
}		% &
public

 
string

 
Message

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
virtual 
Task 
Task  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
TaskNotification 
(  
)  !
{ 	
Uuid 
= 
Guid 
. 
NewGuid 
(  
)  !
;! "
Message 
= 
string 
. 
Empty "
;" #
} 	
public 
TaskNotification 
(  
string  &
message' .
,. /
Task0 4
task5 9
)9 :
{ 	
Uuid 
= 
Guid 
. 
NewGuid 
(  
)  !
;! "
Message 
= 
message 
; 
Task 
= 
task 
; 
} 	
public 
TaskNotification 
(  
string  &
message' .
,. /
string0 6
title7 <
,< =
string> D
descriptionE P
,P Q
stringR X
sourceY _
,_ `
inta d
	projectIde n
,n o
stringp v
?v w
payloadx 
)	 €
{ 	
Uuid 
= 
Guid 
. 
NewGuid 
(  
)  !
;! "
Message 
= 
message 
; 
Task 
= 
new 
Task 
( 
title !
,! "
description# .
,. /
source0 6
,6 7
	projectId8 A
,A B
payloadC J
)J K
;K L
} 	
}   
}!! Ÿ
GC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\TaskState.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

enum 
	TaskState 
{ 
Opened 
, 
Assigned		 
,		 
Done

 
,

 
Rejected 
, 
} 
} û
CC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\Token.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

class 
Token 
{ 
public 
string 
Value 
{ 
get !
;! "
set# &
;& '
}( )
public		 
DateTime		 
	ExpiryUtc		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Uuid 
{ 
get  
;  !
set" %
;% &
}' (
public 
Token 
( 
string 
value !
,! "
DateTime# +
	expiryUtc, 5
,5 6
string7 =
email> C
,C D
GuidE I
uuidJ N
)N O
{ 	
Value 
= 
value 
; 
	ExpiryUtc 
= 
	expiryUtc !
;! "
Email 
= 
email 
; 
Uuid 
= 
uuid 
. 
ToString  
(  !
)! "
;" #
} 	
} 
} é
BC:\Development\hslu\baa\PushAlertsApi\PushAlertsApi.Models\User.cs
	namespace 	
PushAlertsApi
 
. 
Models 
{ 
public 

class 
User 
{		 
[

 	

JsonIgnore

	 
]

 
public

 
int

 
Id

  "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
Guid 
Uuid 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	

JsonIgnore	 
] 
public 
byte  
[  !
]! "
PasswordHash# /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
[ 	

JsonIgnore	 
] 
public 
byte  
[  !
]! "
PasswordSalt# /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
[ 	

JsonIgnore	 
] 
public 
virtual #
List$ (
<( )
Project) 0
>0 1
?1 2
Projects3 ;
{< =
get> A
;A B
setC F
;F G
}H I
=J K
newL O
(O P
)P Q
;Q R
public 
User 
( 
) 
{ 	
PasswordHash 
= 
Array  
.  !
Empty! &
<& '
byte' +
>+ ,
(, -
)- .
;. /
PasswordSalt 
= 
Array  
.  !
Empty! &
<& '
byte' +
>+ ,
(, -
)- .
;. /
Uuid 
= 
Guid 
. 
Empty 
; 
Email 
= 
string 
. 
Empty  
;  !
} 	
public 
User 
( 
string 
email  
)  !
{ 	
PasswordHash   
=   
Array    
.    !
Empty  ! &
<  & '
byte  ' +
>  + ,
(  , -
)  - .
;  . /
PasswordSalt!! 
=!! 
Array!!  
.!!  !
Empty!!! &
<!!& '
byte!!' +
>!!+ ,
(!!, -
)!!- .
;!!. /
Uuid"" 
="" 
Guid"" 
."" 
NewGuid"" 
(""  
)""  !
;""! "
Email## 
=## 
email## 
;## 
}$$ 	
public&& 
User&& 
(&& 
string&& 
email&&  
,&&  !
byte&&" &
[&&& '
]&&' (
passwordHash&&) 5
,&&5 6
byte&&7 ;
[&&; <
]&&< =
passwordSalt&&> J
)&&J K
{'' 	
Uuid(( 
=(( 
Guid(( 
.(( 
NewGuid(( 
(((  
)((  !
;((! "
Email)) 
=)) 
email)) 
;)) 
PasswordHash** 
=** 
passwordHash** '
;**' (
PasswordSalt++ 
=++ 
passwordSalt++ '
;++' (
},, 	
}-- 
}.. 